"""
Autogenerated input type of CreateCollaborator
"""
input CreateCollaboratorInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  collabId: ID!
  projectId: ID!
  userId: ID!
}

"""
Autogenerated return type of CreateCollaborator
"""
type CreateCollaboratorPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  collaborator: User!
  errors: [String!]!
}

"""
Autogenerated input type of CreateProjectRepo
"""
input CreateProjectRepoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectId: ID!
  repoName: ID!
  userId: ID!
}

"""
Autogenerated return type of CreateProjectRepo
"""
type CreateProjectRepoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreateResource
"""
input CreateResourceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  name: String!
  projectId: ID!
  resourceType: String!
  tags: [String!]
  userId: ID!
}

"""
Autogenerated return type of CreateResource
"""
type CreateResourcePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  resource: Resource
}

"""
Autogenerated input type of DeleteResource
"""
input DeleteResourceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectId: ID!
  resourceId: ID!
  userId: ID!
}

"""
Autogenerated return type of DeleteResource
"""
type DeleteResourcePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
}

"""
Autogenerated input type of EditProject
"""
input EditProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  modNumber: String
  name: String
  projectId: ID!
  summary: String
  userId: ID!
}

"""
Autogenerated return type of EditProject
"""
type EditProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  project: Project
}

"""
Autogenerated input type of EditResource
"""
input EditResourceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  name: String!
  projectId: ID!
  resourceId: ID!
  resourceType: String!
  tags: [String!]!
  userId: ID!
}

"""
Autogenerated return type of EditResource
"""
type EditResourcePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  resource: Resource
}

"""
Autogenerated input type of EditUser
"""
input EditUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cohort: String
  name: String
  pronouns: String
  slackHandle: String
  userId: ID!
  workingStyles: [String!]
}

"""
Autogenerated return type of EditUser
"""
type EditUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

type Mutation {
  createCollaborator(
    """
    Parameters for CreateCollaborator
    """
    input: CreateCollaboratorInput!
  ): CreateCollaboratorPayload
  createProjectRepo(
    """
    Parameters for CreateProjectRepo
    """
    input: CreateProjectRepoInput!
  ): CreateProjectRepoPayload
  createResource(
    """
    Parameters for CreateResource
    """
    input: CreateResourceInput!
  ): CreateResourcePayload
  deleteResource(
    """
    Parameters for DeleteResource
    """
    input: DeleteResourceInput!
  ): DeleteResourcePayload
  editProject(
    """
    Parameters for EditProject
    """
    input: EditProjectInput!
  ): EditProjectPayload
  editResource(
    """
    Parameters for EditResource
    """
    input: EditResourceInput!
  ): EditResourcePayload
  editUser(
    """
    Parameters for EditUser
    """
    input: EditUserInput!
  ): EditUserPayload
}

type Project {
  collaborators: [User!]
  id: ID!
  modNumber: String
  name: String
  owner: User
  resources: [Resource!]
  summary: String
}

type Query {
  """
  the name of the project
  """
  project(id: ID!): Project!

  """
  return a user
  """
  user(id: ID!): User!

  """
  return all users
  """
  users: [User!]!

  """
  all of a user's projects
  """
  usersProjects(userId: ID!): [Project!]!
}

type Resource {
  content: String!
  id: ID!
  name: String!
  project: Project
  resourceType: String!
  tags: [String!]
}

type User {
  cohort: String
  email: String
  githubHandle: String
  id: ID!
  name: String
  pronouns: String
  slackHandle: String
  workingStyles: [String!]
}
